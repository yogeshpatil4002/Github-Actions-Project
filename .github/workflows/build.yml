name: 🔨 Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    name: 🧪 Install, Lint, Test
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🛠 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📦 Install dependencies
        run: npm install
        working-directory: ./app

      - name: ✅ Lint the code
        run: npm run lint || echo "Lint warnings ignored"
        working-directory: ./app

      - name: 🧪 Run Unit Tests
        run: npm test
        working-directory: ./app

      - name: 🧾 Generate test report (optional)
        run: |
          mkdir -p test-results
          npm test -- --outputFile=test-results/results.xml || true
        working-directory: ./app

  docker:
    name: 🐳 Build & Push Docker to ECR
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 🔐 Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: 📁 Create ECR Repo if it doesn't exist
        run: |
          aws ecr describe-repositories --repository-names ${{ secrets.ECR_REPO_NAME }} || \
          aws ecr create-repository --repository-name ${{ secrets.ECR_REPO_NAME }}

      - name: 🐳 Build Docker image
        run: docker build -t ${{ secrets.ECR_REPO_NAME }} ./app

      - name: 🏷️ Tag Docker image
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPO_NAME }}:${{ github.sha }}"
          docker tag ${{ secrets.ECR_REPO_NAME }} $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: 📤 Push Docker image to ECR
        run: docker push ${{ env.IMAGE_URI }}

      - name: 📢 Send Slack Notification
        if: always()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"✅ *Build job finished with status:* ${{ job.status }}"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
